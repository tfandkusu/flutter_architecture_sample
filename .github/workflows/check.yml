# ワークフローの名前
name: check
# ワークフロー実行タイミングは
on:
  # mainブランチへのPUSH
  push:
    branches:
      - main
  # プルリクの作成と更新
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
jobs:
  check: # job名
    # ubuntuで動かす
    runs-on: ubuntu-latest
    steps:
      # ソースコードのチェックアウト
      - uses: actions/checkout@v3
        with:
          # Codecovのために必要な設定
          fetch-depth: 0
      # Flutter環境のセットアップ
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.2'
          channel: 'stable'
          cache: true
      # Ruby環境のセットアップ(for Danger)
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
      # 依存ライブラリのダウンロード
      - run: flutter pub get
      # freezedのためにbuild_runnerの実行
      - run: flutter pub run build_runner build
      # フォーマットの確認
      - run: flutter format -n --set-exit-if-changed .
      # lintの出力
      - run: flutter analyze --no-fatal-infos  --no-fatal-warnings > flutter_analyze_report.txt
      # Dangerでプルリクに投稿する
      - run: bundle exec danger
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # 単体テストの実行とカバレッジレポートの出力
      - run: flutter test --coverage
      # カバレッジレポートをCodecovに送る
      - run: curl -Os https://uploader.codecov.io/latest/linux/codecov
      - run: chmod +x codecov
      - run: ./codecov -t ${{ secrets.CODECOV_TOKEN }}
